# button-text: GIB after 1C
# scenario-title: GIB responses to 1C
# GIB_1C-P-Resp
dealer south


/*
South opens 1C and North responds 1D, 1H, 1S, 1N, 2C, 2N, 3C, 3D, 3H, 3S, or 3N.

convention-card: 21GF-GIB
auction-filter: Auction.....\n1C .*Pass .*(1[DHS]|1NT?|2C|2NT?|3[CDHS]|3NT?) +

*/


##### Imported Script: Define Calm Opponents #####

# Avoid concentration of values
cce = top4(east,clubs)<2
cde = top4(east,diamonds)<2
che = top4(east,hearts)<2
cse = top4(east,spades)<2
noConEast = cce and cde and che and cse

ccw = top4(west,clubs)<2
cdw = top4(west,diamonds)<2
chw = top4(west,hearts)<2
csw = top4(west,spades)<2
noConWest = ccw and cdw and chw and csw

balEast    = shape(east,any 4432 +any 4333)
unbalEast  = shape(east,xxxx -any 4432 -any 4333 -any 9xxx -any 8xxx -any 7xxx-any 6xxx -any 55xx)

balWest    = shape(west,any 4432 +any 4333)
unbalWest  = shape(west,xxxx -any 4432 -any 4333 -any 9xxx -any 8xxx -any 7xxx-any 6xxx -any 55xx)

calmEast = (unbalEast and noConEast and hcp(east)<8) or (balEast and hcp(east)<12)
calmWest = (unbalWest and noConWest and hcp(west)<8) or (balWest and hcp(west)<12)
calmOpps = calmEast and calmWest

##### End of Imported Script: Define Calm Opponents #####

# Defines calmOpps
##### Imported Script -- Predict Opening 1-Bid #####

# Changed to use gibNT 3/30/2025

# GIB opens 1N w/15-17 HCP or 15-16 and a 5-card major
ntP = hcp(south) + shape(south,5xxx+x5xx)
nt1 = shape(south, any 5332+any 4432+any 4333) and hcp(south)>14 and ntP<18

# GIB does not open with 5422 and a 5-card major
# GIB does not open with 5422 and the strength to reverse
nt2 = shape(south, any 5422 -5xxx-x5xx-4xxx) and hcp(south)>14 and hcp(south)<17

gibNT = nt1 or nt2

# Calculate length points for South (lengthPoints)
lp1 = spades(south)>4 ? spades(south)-4 : 0
lp2 = hearts(south)>4 ? hearts(south)-4 : 0
lp3 = diamonds(south)>4 ? diamonds(south)-4 : 0
lp4 = clubs(south)>4 ? clubs(south)-4 : 0
lengthPoints = lp1 + lp2 + lp3 + lp4

# Define suit points for south (suitPoints)
suitPoints = hcp(south) + lengthPoints

TwoNtShape = shape(south, any 4333 +any 4432 +any 5332 +any 5422)

# Define ntPoint ranges
oneNT   = gibNT
twoNT   = TwoNtShape and hcp(south)>19 and hcp(south)<22
threeNT = TwoNtShape and hcp(south)>24 and hcp(south)<28

# Define Game Forcing 2C
case1 = hcp(south)>21
case2 = hcp(south)>18 and losers(south)<5 and (spades(south)>5 or hearts(south)>5)
case3 = hcp(south)>18 and losers(south)<4 and (diamonds(south)>5 or clubs(south)>5)
gameForce2C = (case1 or case2 or case3) and not threeNT

### Predict South's opening BID
P1 = gameForce2C
P2 = P1 or threeNT or twoNT or oneNT

# Predict South's Opening suit
s = spades(south)
h = hearts(south)
d = diamonds(south)
c = clubs(south)
s1Range = suitPoints>11 and hcp(south)>9
oS = s>4 and s>=h and s>=d and s>=c and s1Range and not P2
oH = not oS and h>4 and h>=d and h>=c and s1Range and not P2
oD = not (oS or oH) and ((d>3 and d>=c) or c<3) and s1Range and not P2
oC = not (oS or oH or oD) and s1Range and not P2
openingSuit = (oS or oH or oD or oC)
oneSpade   = oS
oneHeart   = oH
oneDiamond = oD
oneClub    = oC

##### End of Imported Script -- Predict Opening 1-Bid #####
# Defines oneClub
##### Imported Script - Calculate Total Points for South #####

## Calculate TP for South
# Calculate South's Short-Suit Penalty Points
sSP = spades(south)<3 and hcp(south,spades)>0     ? 1 : 0
sHP = hearts(south)<3 and hcp(south,hearts)>0     ? 1 : 0
sDP = diamonds(south)<3 and hcp(south,diamonds)>0 ? 1 : 0
sCP = clubs(south)<3 and hcp(south,clubs)>0       ? 1 : 0

# Calculate South's Short-Suit Points
sv1 = shape(south, any 0xxx) ? 3 : 0
ss1 = shape(south, any 1xxx) ? 2 : 0 // allow for 2 singletons
ss2 = shape(south, any 11xx) ? 2 : 0
sd1 = shape(south, any 2xxx) ? 1 : 0 // allow for 3 doubletons
sd2 = shape(south, any 22xx) ? 1 : 0
sd3 = shape(south, any 222x) ? 1 : 0

# Calculate South's Total Points
sTP = hcp(south) + sv1+ss1+ss2+sd1+sd2+sd3 -sSP-sHP-sDP-sCP

### End of Calculate TP for South ###
# Defines sTP
##### Imported Script - Calculate Total Points for North #####

## Calculate TP for North
# Calculate Nouth's Short-Suit Penalty Points
nSP = spades(north)<3   and hcp(north,spades)>0   ? 1 : 0
nHP = hearts(north)<3   and hcp(north,hearts)>0   ? 1 : 0
nDP = diamonds(north)<3 and hcp(north,diamonds)>0 ? 1 : 0
nCP = clubs(north)<3    and hcp(north,clubs)>0    ? 1 : 0

# Calculate North's Short-Suit Points
nv1 = shape(north, any 0xxx) ? 3 : 0 // allow for 1 void
ns1 = shape(north, any 1xxx) ? 2 : 0 // allow for 2 singletons
ns2 = shape(north, any 11xx) ? 2 : 0
nd1 = shape(north, any 2xxx) ? 1 : 0 // allow for 3 doubletons
nd2 = shape(north, any 22xx) ? 1 : 0
nd3 = shape(north, any 222x) ? 1 : 0

# Calculate South's Total Points
nTP = hcp(north) + nv1+ns1+ns2+nd1+nd2+nd3 -nSP-nHP-nDP-nCP

### End of Calculate TP for North ###
# Defines nTP

TakeOutDouble = (balWest and hcp(west)>10 and shape(west,xxx2)) or (balEast and hcp(east)>10 and shape(east,xxx2))  // Must know opening suit
oppsPass = calmOpps and not TakeOutDouble

## Define things...

# Define North's suit lengths
nC = clubs(north)
nD = diamonds(north)
nH = hearts(north)
nS = spades(north)

# GIB defines partial stop: length+HCP = 4 (Qx or Jxx).  But, it bids differently with 3-cards or honor doubleton
dStop = (hcp(north,diamonds) + nD)>3 ? 2 : 0      // Dealer doesn't allow fractions; so 2 pts for stop
hStop = (hcp(north,hearts)   + nH)>3 ? 2 : 0
sStop = (hcp(north,spades)   + nS)>3 ? 2 : 0

dHalf = not dStop and ((hcp(north,diamonds)>0) + nD)==3   // and 1 pt for half-stop: any 3-cards or honor doubleton
hHalf = not hStop and ((hcp(north,hearts)>0)   + nH)==3
sHalf = not sStop and ((hcp(north,spades)>0)   + nS)==3

stops = dStop + hStop + sStop + dHalf + hHalf +sHalf

# I've exceeded the number or 'shape' statements that Dealer allows, I'll use the less efficient version.
s3334 = nS==3 and nH==3  and nD==3
s3343 = nS==3 and nH==3  and nD==4
sxx44 = (nS==3 or nS==2) and nD==4 and nC==4  // 3244 or 2344
nBal  = (s3334 or s3343 or sxx44)  // no 4-card major

## Define South's 1C opening and North's responses

sRange = hcp(south)>11 and hcp(south)<22 and sTP>11 and sTP<23
sClubs = oneClub and nS<5 and nH<5

nRange = nTP>5 and nTP<16    // avoid strong jump shifts

## 1. Major responses

rS1 = nS>4 and nS>=nH                       // higher ranking of 5+card suits
rS2 = nTP<13 and nS==4 and nS>nH            // skip longer D w/<13
rS3 = shape(north,4xxx) and nS>nH and nD<5  // prefer 4-card H/S to 4-card D
r1S = rS1 or rS2 or rS3

rH1 = nH>4 and nH>nS
rH2 = nTP<13 and nH==4 and nH>=nS
rH3 = shape(north,x4xx) and nD<5  
r1H = (rH1 or rH2 or rH3) and not r1S

rM = r1H or r1S

## 2. Club responses

r3x   = nC>4 and shape(north,any 0xxx +any 1xxx) and nTP>13               and not rM          // splinter
r2C34 = s3334             and hcp(north)>10 and hcp(north)<13 and stops<5 and not rM
r2C44 = sxx44             and hcp(north)>10 and hcp(north)<13 and stops<4 and not rM
r2C3N = s3334+s3343+sxx44 and hcp(north)>12 and hcp(north)<16             and not rM          // GIB goes through 2C w/a bal 13-15
r2Cx5 = nC>4              and nD<5 and hcp(north)>9                       and not (rM or r3x)
r2C = r2C34 or r2C44 or r2C3N or r2Cx5
r3C = nC>4 and nD<5       and hcp(north)<10 and nTP>4                     and not (rM or r3x)

rC  = r2C34 or r2C44 or r2C3N or r2Cx5 or r3C or r3x

## 3. Notrump responses

r1N  = hcp(north)>5  and hcp(north)<11 and nBal and not rC

r2Na = hcp(north)>10 and hcp(north)<13 and sxx44 and stops>3 and hcp(north,diamonds)>0 and not rC // prefer 1D or 2C
r2Nb = hcp(north)>10 and hcp(north)<13 and s3334 and stops>4                           and not rC // no alternative
r2Nc = hcp(north)>10 and hcp(north)<13 and s3343 and stops>5                           and not rC // prefer 1D
r2N = r2Na or r2Nb or r2Nc

rN  = r1N or r2N

## 4. Diamonds

r1D = nD>3 and not (rM or rN or rC)

## 5. Check for leaks

rOther  = not (r1D or rM or rN or rC)

// Change the following line to get the responses you want --------
//
nResponds = r1D or r1H or r1S or r1N or r2C or r2N or r3C or r3x or rOther
//
// ----------------------------------------------------------------

sClubs and sRange and nRange and nResponds and oppsPass

action
average "1D   " 100 * r1D,
average "1H   " 100 * r1H,
average "1S   " 100 * r1S,
average "1N   " 100 * r1N,
average "2C   " 100 * r2C,
average "2N   " 100 * r2N,
average "3C   " 100 * r3C,
average "3x   " 100 * r3x,
average "other" 100 * rOther,


printpbn
