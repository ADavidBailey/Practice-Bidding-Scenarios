generate 100000000

produce 500

lp1 = spades(east)>4 ? spades(east)-4 : 0
lp2 = hearts(east)>4 ? hearts(east)-4 : 0
lp3 = diamonds(east)>4 ? diamonds(east)-4 : 0
lp4 = clubs(east)>4 ? clubs(east)-4 : 0
lengthPoints = lp1 + lp2 + lp3 + lp4
S2H = spades(east)==2 and top4(east,spades)==1 and not hascard(east,AS) ? 1 : 0
H2H = hearts(east)==2 and top4(east,hearts)==1 and not hascard(east,AH) ? 1 : 0
D2H = diamonds(east)==2 and top4(east,diamonds)==1 and not hascard(east,AD) ? 1 : 0
C2H = clubs(east)==2 and top4(east,clubs)==1 and not hascard(east,AC) ? 1 : 0
ntDownGrade = S2H + H2H + D2H + C2H
ntPoints = hcp(east) + lengthPoints - ntDownGrade
suitPoints = hcp(east) + lengthPoints
ntShape = shape(east, any 4333 +any 4432 +any 5332 +any 5422 -5xxx -x5xx)
oneNT   = ntShape and ntPoints>14 and ntPoints<18
twoNT   = ntShape and ntPoints>19 and ntPoints<22
threeNT = ntShape and ntPoints>25 and ntPoints<28
weakNT  = ntShape and ntPoints>10 and ntPoints<15
case1 = hcp(east)>22
case2 = hcp(east)>18 and losers(east)<5 and (spades(east)>5 or hearts(east)>5)
case3 = hcp(east)>18 and losers(east)<4 and (diamonds(east)>5 or clubs(east)>5)
gameForce2C = (case1 or case2 or case3) and not threeNT
P1 = gameForce2C
P2 = P1 or threeNT or twoNT or oneNT // or weakNT  weakNT will be duplicated diamond and club openings
s = spades(east)
h = hearts(east)
d = diamonds(east)
c = clubs(east)
s1Range = suitPoints>11 and hcp(east)>9
oS = s>4 and s>=h and s>=d and s>=c and s1Range and not P2
oH = not oS and h>4 and h>=d and h>=c and s1Range and not P2
oD = not (oS or oH) and ((d>3 and d>=c) or c<3) and s1Range and not P2
oC = not (oS or oH or oD) and s1Range and not P2
openingSuit = (oS or oH or oD or oC)
oneSpade = oS
oneHeart = oH
oneDiamond = oD                                                              // duplicates weakNT
oneClub = oC                                                                 // duplicates weakNT
GoodS = spades(south)>4 and top5(south,spades)>2
GoodH = hearts(south)>4 and top5(south,hearts)>2
GoodD = diamonds(south)>4 and top5(south,diamonds)>2
GoodC = clubs(south)>4 and top5(south,clubs)>2
SH = (GoodS and GoodH)
SD = (GoodS and GoodD)
SC = (GoodS and GoodC)
HD = (GoodH and GoodD)
HC = (GoodH and GoodC)
DC = (GoodD and GoodC)
oneS = oS and (HD or HC or DC)  // Michaels or Michaels or Unusual NT
oneH = oH and (SD or SC or DC)  // Michaels or Michaels or Unusual NT
oneD = oD and (SH or HC or SC)  // Michaels or Unusual NT or ???? - no way to show SC
oneC = oC and (SH or HD or SD)  // Michaels or Unusual NT or ???? - no way to show SD
oSuit = (oneS or oneH or oneD or oneC) and shape(east,any xxxx-8xxx-7xxx-6xxx)
oRange = hcp(east)>11 and hcp(east)<15
iWeak   = losers(south)<8 and hcp(south)>7  and hcp(south)<12
iStrong = losers(south)<5 and hcp(south)>14 and hcp(south)<20
iRange = iWeak or iStrong
wHCP    = iWeak   ? hcp(south)    : 0
wLosers = iWeak   ? losers(south) : 0
sHCP    = iStrong ? hcp(south)    : 0
sLosers = iStrong ? losers(south) : 0
rRange = hcp(west)>7

condition
# Two-Suited Overcalls
dealer east
produce 1000
## Imported Script -- Predict Opening Bid ##
# Calculate length points for east (lengthPoints)
# Calculate doubleton honor NT downgrade(s) for east -- 2 cards, 1 honor, not the Ace
# Define notrump points for east (ntPoints)
# Define suit points for east (suitPoints)
# Define robot notrump shape and exclude any 5card 
# Define ntPoint ranges
# Define Game Forcing 2C
### Predict east's opening BID
# Predict east's Opening suit
### End of Predict-Opening-Bid ###
# 2-suited overcalls
# Define good suits
# Define 2-suits
# Define 2-Suits -- not opener's suit
# Intervener is weak or strong
# This is an attempt to get stats for overcaller weak/strong.  I don't think I can get it to work.
# Responder's minimum HCP -- you might try adjusting this
### Now do it
oSuit and iRange and rRange
# To get stats for south weak/strong uncomment one of the following
#and iWeak
#and iStrong
# You might also play with choseing south's suits
#and SC or SD  // If you just want the problematic ones
action
#printoneline,
average "Weak       " 100 * iWeak,
average "  HCP      "     wHCP,
average "  Losers   "     wLosers,
average "Strong     " 100 * iStrong,
average "  HCP      "     sHCP,
average "  Losers   "     sLosers,
average "1S         " 100 * (oneS and (HD or HC or DC)),
average "   (2S)  HD" 100 * (oneS and HD),
average "   (2S)  HC" 100 * (oneS and HC),
average "   (2N)  DC" 100 * (oneS and DC),
average "1H         " 100 * (oneH and (SD or SC or DC)),
average "   (2H)  SD" 100 * (oneH and SD),
average "   (2H)  SC" 100 * (oneH and SC),
average "   (2N)  DC" 100 * (oneH and DC),
average "1D         " 100 * (oneD and (SH or HC or SC)),
average "   (2D)  SH" 100 * (oneD and SH),
average "   (2N)  HC" 100 * (oneD and HC),
average "         SC" 100 * (oneD and SC),
average "1C         " 100 * (oneC and (SH or HD or SD)),
average "   (2C)  SH" 100 * (oneC and SH),
average "   (2N)  DC" 100 * (oneC and HD),
average "         SD" 100 * (oneC and SD),
frequency "Opener HCP    " (hcp(east),12,14),
frequency "Intervener HCP" (hcp(south),8,19),
frequency "Responder HCP " (hcp(west),6,17),

action printpbn