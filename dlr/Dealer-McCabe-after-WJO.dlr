generate 100000000

produce 500

s = spades(east)
h = hearts(east)
d = diamonds(east)
c = clubs(east)
eS = s>4 and s>=h and s>=d and s>=c
eH = not eS and h>4 and h>=d and h>=c
eD = not (eS or eH) and ((d>3 and d>=c) or c<3)
eC = not (eS or eH or eD)
eastOpens = hcp(east)>11 and hcp(east)<15 and (eC or eD or eH)
tp = hcp(south)
sp = hcp(south,spades)
hp = hcp(south,hearts)
dp = hcp(south,diamonds)
w2s = shape(south,6xxx-x4xx     -any 7xxx-any 66xx-any 65xx) and 2 * sp > tp and top4(south,spades)>1
w2h = shape(south,x6xx-4xxx     -any 7xxx-any 66xx-any 65xx) and 2 * hp > tp and top4(south,hearts)>1
w2d = shape(south,xx6x-x4xx-4xxx-any 7xxx-any 66xx-any 65xx) and 2 * dp > tp and top4(south,diamonds)>1
wjoRange = tp>6 and tp<10 and losers(south)<8  // I tried reducing the tp to <9 and got many more errors
wjoSuit = (eH and w2s) or (eD and (w2s or w2h)) or (eC and (w2s or w2h or w2d))
weakJumpOvercall = wjoSuit and wjoRange
sShort = w2s and spades(west)<3 and shape(west,x4xx)
hShort = w2h and hearts(west)<3 and shape(west,4xxx)
dShort = w2d and diamonds(west)<3 and shape(west,44xx)
ewFit = (eH and hearts(west)>2) or (eD and diamonds(west)>3) or (eC and clubs(west)>3)
westX = hcp(west)>6 and (sShort or hShort or dShort) and shape(west,any 5440+any 5431+any 4441+any 4432) and not ewFit
sFit = w2s and spades(north)>2
hFit = w2h and hearts(north)>2
dFit = w2d and diamonds(north)>2
nsFit = sFit or hFit or dFit
sLen = sFit ? spades(north)   : 0
hLen = hFit ? hearts(north)   : 0
dLen = dFit ? diamonds(north) : 0
trumpLength = (sLen + hLen + dLen)
rule17 = (hcp(north) + trumpLength)>17
rule15 = (hcp(north) + trumpLength)>15   and not (rule17)
lS = top3(north,spades)==2   and not w2s
lH = top3(north,hearts)==2   and not w2h
lD = top3(north,diamonds)==2 and not w2d
lC = top3(north,clubs)==2
leadAsk = nsFit and (lS or lH or lD or lC) and not (rule17 or rule15)
raise = nsFit and hcp(north)>6    and not(rule17 or rule15 or leadAsk)
sS = (spades(north)==5 and top4(north,spades)==4)     or (spades(north)>5   and top4(north,spades)==3)
sH = (hearts(north)==5 and top4(north,hearts)==4)     or (hearts(north)>5   and top4(north,hearts)==3)
sD = (diamonds(north)==5 and top4(north,diamonds)==4) or (diamonds(north)>5 and top4(north,diamonds)==3)
sC = (clubs(north)==5 and top4(north,clubs)==4)       or (clubs(north)>5    and top4(north,clubs)==3)
mySuit = (sS or sH or sD or sC) and not nsFit and not (rule17 or rule15 or leadAsk or raise)
pass = not (rule17 or rule15 or leadAsk or raise or mySuit)
### Imported Leveling Code ###
c1 = hascard(west,2C)
c2 = hascard(east,2D)
c3 = hascard(west,3C)
c4 = hascard(east,3D)

keep06 = c1 and c2          // this is used later w/c3 & c4 expressions
keep44 = c3 or c4           // this is used later w/c1 & c2 expressions

keep015 = keep06 and c3
keep03 = keep06 and keep44
keep045 = keep06 and not c3
####06 = c1 and c2
keep11 = c1 and keep44
keep14 = c1 and not keep44
keep19 = c1 and not c2
keep25 = c1
keep30 = keep06 or c3
keep33 = c1 or (c2 and keep44)
####44 = c3 or c4
keep47 = keep44 or keep06

keep53 = not keep47
keep56 = not keep44
keep67 = not keep33
keep70 = not keep30
keep75 = not keep25
keep81 = not keep19
keep86 = not keep14
keep89 = not keep11
keep94 = not keep06
keep955 = not keep045
keep97 = not keep03
keep985 = not keep015
keep   = 1
keep0  = 0
### End of Imported Leveling Code ###
### See -Stats-Leveling for statistics on these values ###
### Example of how to generate Statistics for Leveling ###

lRule17      = rule17     and keep
lRule15      = rule15     and keep44
lLeadAsk     = leadAsk    and keep06 and not c3  // 4.5%
lRaise       = raise      and keep06 and not c3  // 4.5%
lmySuit      = mySuit     and keep56
lPass        = pass       and keep03
levelTheDeal = lRule17 or lRule15 or lLeadAsk or lRaise or lmySuit or lPass

condition
# McCabe after Weak Jump Overcall
# The McCabe Convention gives useful options for Advancer after Partner’s Weak Jump Overcall is doubled.
generate 20000000
produce 1000
dealer east
# Define East's Opening of 1C, 1D, or 1H
# Define South's Weak Jump Overcall
    // at least half of south's points are in the suit
    // allow no 4-card side major
// Define responders hand types
//  • 4 of Opener’s suit – Preempt or Rule of 17 raise.
//  • Redouble – I have a long suit of my own. Please keep the bidding
//    open by bidding the cheapest denomination if Advancer passes so
//    that I may bid my suit or pass if you bid it.
//  • 2NT – Asks feature or Ogust just like without their double.
//  • Preempt - 3/4 of Opener’s suit.
//  • New suit – I want you to lead the suit I bid. I have a some spot cards
//    in you suit so you can rebid your own suit if Advancer passes.
### Define West X -- short in opener's suit and 4-cards in each unbid major
// deny e/w fit, reduce west hcp, and allow 5431 to reduce 'Error generating deal'
# Define North's fit with South's suit
### Define Rule17 points -- FORCE TO GAME
### Define Rule15       -- INVITE GAME
### Define Lead my suit -- MILD PREEMPT
### Define Mild preempt -- MILD PREEMPT
### Define North's long & strong suits
### Define pass
# Define leveling
# Level the deal
# Now do it
eastOpens and weakJumpOvercall and westX and (rule17 or rule15 or leadAsk or raise or mySuit or pass)
and levelTheDeal
action
average "Rule of 17" 100 * rule17,
average "Rule of 15" 100 * rule15,
average "Lead Ask  " 100 * leadAsk,
average "Raise     " 100 * raise,
average "mySuit    " 100 * mySuit,
average "Pass      " 100 * pass,
/*
Rule of 17: 6.66667
Rule of 15: 20
Lead Ask  : 13.3333
Raise     : 22.2222
mySuit    : 15.5556
Pass      : 22.2222
Generated 25000000 hands
Produced 45 hands
Initial random seed 1709659486
Time needed   58.460 sec
*/

action printpbn