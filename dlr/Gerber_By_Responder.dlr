# button-text: Gerber by Responder (Lev)
# scenario-title: Gerber by Responder (Leveled)
# Gerber_By_Responder
dealer south


# auction-filter: Note....Gerber
#
# Gerber by Responder
# 


##### Imported Script -- Predict Opening 1-Bid #####

# Changed to use gibNT 3/30/2025

# GIB opens 1N w/15-17 HCP or 15-16 and a 5-card major
ntP = hcp(south) + shape(south,5xxx+x5xx)
nt1 = shape(south, any 5332+any 4432+any 4333) and hcp(south)>14 and ntP<18

# GIB does not open with 5422 and a 5-card major
# GIB does not open with 5422 and the strength to reverse
nt2 = shape(south, 4252+4225+2452+2425+2254+2245) and hcp(south)>14 and hcp(south)<17

gibNT = nt1 or nt2

# Calculate length points for South (lengthPoints)
lp1 = spades(south)>4 ? spades(south)-4 : 0
lp2 = hearts(south)>4 ? hearts(south)-4 : 0
lp3 = diamonds(south)>4 ? diamonds(south)-4 : 0
lp4 = clubs(south)>4 ? clubs(south)-4 : 0
lengthPoints = lp1 + lp2 + lp3 + lp4

# Define suit points for south (suitPoints)
suitPoints = hcp(south) + lengthPoints

TwoNtShape = shape(south, any 4333 +any 4432 +any 5332 +any 5422)

# Define ntPoint ranges
oneNT   = gibNT
twoNT   = TwoNtShape and hcp(south)>19 and hcp(south)<22
threeNT = TwoNtShape and hcp(south)>24 and hcp(south)<28

# Define Game Forcing 2C
case1 = hcp(south)>21
case2 = hcp(south)>18 and losers(south)<5 and (spades(south)>5 or hearts(south)>5)
case3 = hcp(south)>18 and losers(south)<4 and (diamonds(south)>5 or clubs(south)>5)
gameForce2C = (case1 or case2 or case3) and not threeNT

### Predict South's opening BID
P1 = gameForce2C
P2 = P1 or threeNT or twoNT or oneNT

# Predict South's Opening suit
s = spades(south)
h = hearts(south)
d = diamonds(south)
c = clubs(south)
s1Range = suitPoints>11 and hcp(south)>9
oS = s>4 and s>=h and s>=d and s>=c and s1Range and not P2
oH = not oS and h>4 and h>=d and h>=c and s1Range and not P2
oD = not (oS or oH) and ((d>3 and d>=c) or c<3) and s1Range and not P2
oC = not (oS or oH or oD) and s1Range and not P2
openingSuit = (oS or oH or oD or oC)
oneSpade   = oS
oneHeart   = oH
oneDiamond = oD
oneClub    = oC

##### End of Imported Script -- Predict Opening 1-Bid #####
#Import,https://github.com/ADavidBailey/Practice-Bidding-Scenarios/blob/main/script/Predict-Response-to-1-BId
##### Predict Response to 1-Bid ##### 

# These variables are defined in the imported scripts above
# The number of cards South has in each suit: s, h, d, c
# South's predicted opening suit: oC, oD, oH, oS 

sP = hcp(south)
nP = hcp(north)

# Predict North's 1-level response
sN = spades(north)
hN = hearts(north)
dN = diamonds(north)
cN = clubs(north)

# North responds in D, H, or S (Walsh style), or raises C.
######
# If less than 13, Walsh Style; otherwise, longest suit.
nS  =  nP<13 ? sN>3 and sN>hN : sN>3 and sN>hN and sN>=dN and sN>=cN
nH  = (nP<13 ? hN>3           : hN>3           and hN>=dN and hN>=cN) and not (nS)
nD = dN>3           and dN>=cN and not (nS or nH)
nC = cN>4           and cN>4   and not (nS or nH or nD)
nN = not (nS or nH or nD or nC)

# Define South's possible new-suit/NT rebids
sRC = clubs(south)>3
sRD = diamonds(south)>3
sRH = hearts(south)>3
sRS = spades(south)>3
sRN = shape(south,any 4333+any 4432+any 5332)


# Defining South's opening (not NT) & North's non-GF response
CD = oC and nD
CH = oC and nH
CS = oC and nS
CN = oC and nN
CC = oC and nC

DH = oD and nH
DS = oD and nS
DN = oD and nN
DD = oD and not (DH or DS or DN)

HS = oH and nS
HH = oH and hN>2 and not HS
HN = oH and not (HS or HH)
##### End of Predict Response to 1-Bid ##### 


##### Predict Opener's Rebid #####
CDH = CD and sRH
CDS = CD and sRS and not (CDH)
CDN = CD and sRN and not (CDH or CDS)
CDC = CD and c>5 and not (CDH or CDS or CDN)
CDD = CD and d>3 and not (CDH or CDS or CDN or CDC)

CHS = CH and sRS
CHN = CH and sRN and not (CHS)
CHC = CH and c>5 and not (CHS or CHN)
CHD = CH and sRD and not (CHS or CHN or CHC)
CHH = CH and sRH and not (CHS or CHN or CHC or CHD)

CSN = CS and sRN
CSC = CS and c>5 and not (CSN)
CSD = CS and sRD and not (CSN or CSC)
CSH = CS and sRH and not (CSN or CSC or CSD)
CSS = CS and sRS and not (CSN or CSC or CSD or CSH)

CNC = CN and c>5
CND = CN and sRD and not (CNC)
CNH = CN and sRH and not (CNC or CND)
CNS = CN and sRS and not (CNC or CND or CNH)
CNN = CN and sRN and not (CNC or CND or CNH or CNS)

CCD = CC and sRD
CCH = CC and sRH and not (CCD)
CCS = CC and sRS and not (CCD or CCH)
CCN = CC and sRN and not (CCD or CCH or CCS)
CCC = CC and c>5 and not (CCD or CCH or CCS or CCN)

DHS = DH and sRS
DHN = DH and sRN and not (DHS)
DHC = DH and sRC and not (DHS or DHN)
DHD = DH and d>5 and not (DHS or DHC or DHN)
DHH = DH and sRH and not (DHS or DHC or DHN or DHD)

DSN = DS and sRN
DSC = DS and sRC and not (DSN)
DSD = DS and d>5 and not (DSN or DSC)
DSH = DS and sRH and not (DSN or DSC or DSD)
DSS = DS and sRS and not (DSN or DSC or DSD or DSH)

DNC = DN and sRC
DND = DN and d>5 and not (DNC)
DNH = DN and sRH and not (DNC or DND)
DNS = DN and sRS and not (DNC or DND or DNH)
DNN = DN and sRN and not (DNC or DND or DNH or DNS)


HSN = HS and sRN
HSC = HS and sRC and not (HSN)
HSD = HS and sRD and not (HSN or HSC)
HSH = HS and h>5 and not (HSN or HSC or HSD)
HSS = HS and sRS and not (HSN or HSC or HSD or HSH)

HNC = HN and sRC
HND = HN and sRD and not (HNC)
HNH = HN and h>5 and not (HNC or HND)
HNS = HN and sRS and not (HNC or HND or HNH)
HNN = HN and sRN and not (HNC or HND or HNH or HNS)
##### End of Predict Opener's Rebid #####

# returns oneNT, twoNT, gameForce2C, threeNT
# returns CDN, CHN, CSN, DHN, DSN, HSN


#predeal south SA,HA,DAK,CA
#predeal north S,H,DQJT9876,C

xyNT = CDN or CHN or CSN or DHN or DSN or HSN

ntShape = shape(north, any 5422+any 5332+any 4432+any 4333+2272)
gfNT = gameForce2C and ntShape and hearts(south)<4 and spades(south)<4       // avoid xyz to get a NT rebid

# Define suit fits
sFit = (spades(south)+spades(north))>7
hFit = (hearts(south)+hearts(north))>7
dFit = (diamonds(south)+diamonds(north))>8
cfit = (clubs(south)+clubs(north))>8
fit  = sFit or hFit // or dFit or cfit

# Define goodC and goodD
# goodC = clubs(north)>4    and top5(north,clubs)>2
# goodD = diamonds(north)>4 and top5(north,diamonds)>2

nt12 = xyNT    and hcp(south)>11  and hcp(south)<15 
nt15 = oneNT   and hcp(south)==15
nt18 = xyNT    and hcp(south)>17  and hcp(south)<20
nt20 = twoNT   and hcp(south)==20
nt22 = gfNT    and hcp(south)==22
nt25 = threeNT and hcp(south)==25
nt28 = gfNT    and hcp(south)==28

# Define tp = combined hcp
tp = hcp(south)+hcp(north)

### Imported Leveling Code ###
c1 = hascard(west,2C)
c2 = hascard(east,2D)
c3 = hascard(west,3C)
c4 = hascard(east,3D)

keep06 = c1 and c2          // this is used later w/c3 & c4 expressions
keep44 = c3 or c4           // this is used later w/c1 & c2 expressions

keep015 = keep06 and c3
keep03 = keep06 and keep44
keep045 = keep06 and not c3
####06 = c1 and c2
keep11 = c1 and keep44
keep14 = c1 and not keep44
keep19 = c1 and not c2
keep25 = c1
keep30 = keep06 or c3
keep33 = c1 or (c2 and keep44)
####44 = c3 or c4
keep47 = keep44 or keep06

keep53 = not keep47
keep56 = not keep44
keep67 = not keep33
keep70 = not keep30
keep75 = not keep25
keep81 = not keep19
keep86 = not keep14
keep89 = not keep11
keep94 = not keep06
keep955 = not keep045
keep97 = not keep03
keep985 = not keep015
keep   = 1
keep0  = 0
### End of Imported Leveling Code ###


# Level the deal
lev12 = nt12   and keep81
lev15 = nt15   and keep75
lev18 = nt18   and keep
lev20 = nt20   and keep97
lev22 = nt22   and keep
lev25 = nt25   and keep
lev28 = nt28   and keep

# Keep at least one of these
lev31 = tp==31 and keep44
lev32 = tp==32 and keep67
lev33 = tp==33 and keep
levelTheDeal = (lev12 or lev15 or lev18 or lev20 or lev22 or lev25 or lev28) and (lev31 or lev32 or lev33)

# Now do it
(nt12 or nt15 or nt18 or nt20 or nt22 or nt25 or nt28 or lev31 or lev32 or lev33) and not fit
and levelTheDeal

action
average "12 + 21: 1x-1y-1N-? " 100 * nt12,
average "15 + 18: 1N-?       " 100 * nt15,
average "18 + 15: 1x-1y-2N-? " 100 * nt18,
average "20 + 13: 2N-?       " 100 * nt20,
average "22 + 11: 2C-2x-2N-? " 100 * nt22,
average "25 +  8: 3N-?       " 100 * nt25,
average "28 +  5: 2C-2x-3N-? " 100 * nt28,
average "hcp S               " hcp(south),
average "hcp N               " hcp(north),
average "hcp NS=31   " 100 * (hcp(south)+hcp(north)==31),
average "hcp NS=32   " 100 * (hcp(south)+hcp(north)==32),
average "hcp NS=33   " 100 * (hcp(south)+hcp(north)==33),


printpbn
