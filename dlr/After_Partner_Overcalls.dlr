# button-text: After Partner Overcalls
# scenario-title: After Partner Overcalls
# After_Partner_Overcalls
dealer east


# convention-card:
# auction-filter: Auction.....\\n(1C 1[DHS]|1D (1[HS]|2C)|1H (1S|2[CD])|1S 2[CDH]) Pass

# After Partner Overcalls


##### Imported Script -- GIB 1 Notrump #####

# GIB opens 1N w/15-17 HCP or 15-16 and a 5-card major
ntP = hcp(south) + shape(south,5xxx+x5xx)
nt1 = shape(south, any 5332+any 4432+any 4333) and hcp(south)>14 and ntP<18

# GIB does not open with 5422 and a 5-card major
# GIB does not open with 5422 and the strength to reverse
nt2 = shape(south, 4252+4225+2452+2425+2254+2245) and hcp(south)>14 and hcp(south)<17

gibNT = nt1 or nt2

### End of GIB 1 Notrump ###
# Defines gibNT

# Predict East's opening suit -- east will be limited to 12-14 HCP
s = spades(east)
h = hearts(east)
d = diamonds(east)
c = clubs(east)
oS = s>4 and s>=h and s>=d and s>=c
oH = not oS and h>4 and h>=d and h>=c
oD = not (oS or oH) and ((d>3 and d>=c) or c<3)
oC = not (oS or oH or oD)
openingSuit = (oS or oH or oD or oC)

# Calculate East's Rank
eRS = oS ? 4 : 0
eRH = oH ? 3 : 0
eRD = oD ? 2 : 0
eRC = oC ? 1 : 0
eRank = eRS+eRH+eRD+eRC

# Define good suits
sGoodS = spades(south)>4   and top4(south,spades)==3   and not oS
sGoodH = hearts(south)>4   and top4(south,hearts)==3   and not oH
sGoodD = diamonds(south)>4 and top4(south,diamonds)==3 and not oD
sGoodC = clubs(south)>4    and top4(south,clubs)==3    and not oC

sShape = shape(south,any 8xxx + any 7xxx + any 6xxx + any 5xxx - any 85xx - any 76xx - any 75xx - any 65xx - any 55xx)

# Calculate South's Rank
sRS = sGoodS ? 4 : 0
sRH = sGoodH ? 3 : 0
sRD = sGoodD ? 2 : 0
sRC = sGoodC ? 1 : 0
sRank = sRS + sRH + sRD + sRC

# Define working points for South: hcp - points for secondary honors in opponents suit
sSP = oS and hascard(south,AS) ? hcp(south,spades)-4   : hcp(south,spades)
sHP = oH and hascard(south,AH) ? hcp(south,hearts)-4   : hcp(south,hearts)
sDP = oD and hascard(south,AD) ? hcp(south,diamonds)-4 : hcp(south,diamonds)
sCP = oC and hascard(south,AC) ? hcp(south,clubs)-4    : hcp(south,clubs)
WP = hcp(south) - sSP - sHP - sDP - sCP // only one will be non-zero

# Define suitPoints for South: 1 point for every card over 5
sSSP = sGoodS ? spades(south)-5   : 0
sHSP = sGoodH ? hearts(south)-5   : 0
sDSP = sGoodD ? diamonds(south)-5 : 0
sCSP = sGoodC ? clubs(south)-5    : 0
sSuitPoints = hcp(south) + sSSP + sHSP + sDSP + sCSP

sTP = WP + sSuitPoints

# require 12+ WP for lower rank suit and 8+ WP for higher rank. Use WP for lower limit.
sMin = sRank>eRank ? sTP>=8 : sTP>=13
sMax = hcp(south)<18     // avoid too strong to overcall.  This allows a few NT overcalls
sRange = sMin and sMax

# avoid take-out double
shortS = oS and spades(south)<3
shortH = oH and hearts(south)<3
shortD = oD and diamonds(south)<3
shortC = oC and clubs(south)<3
shortOS = shortS or shortH or shortD or shortC
sX = shape(south,any 7330 +any 6430 +any 6331 +any 5431 +any 5440 +any 5332) and shortOS and hcp(south)>10

# avoid weak jump overcalls/preempts
sJump = shape(south,any 8xxx +any 7xxx +any 6xxx) and hcp(south)>5 and hcp(south)<11

# East opens
eOpens = (oC or oD or oH or oS) and hcp(east)>11 and hcp(east)<15

sOvercalls = (sGoodS or sGoodH or sGoodD or sGoodC) and sShape and sRange and not (sX or sJump or gibNT)

wSFit = oS and spades(west)<3
wHFit = oH and hearts(west)<3
wDFit = oD and diamonds(west)<4
wCFit = oC and clubs(west)<4
wPasses = (wSFit or wHFit or wDFit or wCFit) and hcp(west)<6 and shape(west,any 4432 +any 5332 -5xxx -x5xx)

nFitsS = sGoodS and spades(north)>2
nFitsH = sGoodS and hearts(north)>2
nFitsD = sGoodD and diamonds(north)>3
nFitsC = sGoodC and clubs(north)>3
nFit   = (nFitsS or nFitsH or nFitsD or nFitsC)

nRaises  = nFit and hcp(north)>6 and hcp(north)<11
nCueBids = nFit and hcp(north)>10
nNewSuit = shape(north,any 5xxx+any 6xxx) and hcp(north)>9 and not nFit

### Imported Leveling Code ###
c1 = hascard(west,2C)
c2 = hascard(east,2D)
c3 = hascard(west,3C)
c4 = hascard(east,3D)

keep06 = c1 and c2          // this is used later w/c3 & c4 expressions
keep44 = c3 or c4           // this is used later w/c1 & c2 expressions

keep015 = keep06 and c3
keep03 = keep06 and keep44
keep045 = keep06 and not c3
####06 = c1 and c2
keep11 = c1 and keep44
keep14 = c1 and not keep44
keep19 = c1 and not c2
keep25 = c1
keep30 = keep06 or c3
keep33 = c1 or (c2 and keep44)
####44 = c3 or c4
keep47 = keep44 or keep06

keep53 = not keep47
keep56 = not keep44
keep67 = not keep33
keep70 = not keep30
keep75 = not keep25
keep81 = not keep19
keep86 = not keep14
keep89 = not keep11
keep94 = not keep06
keep955 = not keep045
keep97 = not keep03
keep985 = not keep015
keep   = 1
keep0  = 0
### End of Imported Leveling Code ###


levelRaise = nRaises  and keep75
levelCue   = nCueBids and keep
levelSuit  = nNewSuit and keep89

levelTheDeal = nRaises or nCueBids or nNewSuit

# Now do it
eOpens and sOvercalls and wPasses and (nRaises or nCueBids or nNewSuit)
and levelTheDeal

action
average "raises   " 100 * nRaises,
average "cue bids " 100 * nCueBids,
average "new suit " 100 * nNewSuit,


printpbn
