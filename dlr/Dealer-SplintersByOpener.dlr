# {file_path}

generate 10000000

produce 1000
dealer south




# Splinters by Opener
##### Define Calm Opponents #####
#Import,https://github.com/ADavidBailey/Practice-Bidding-Scenarios/blob/main/-Script-Calm-Opponents
# Avoid concentration of values
cce = top4(east,clubs)<2
cde = top4(east,diamonds)<2
che = top4(east,hearts)<2
cse = top4(east,spades)<2
noConEast = cce and cde and che and cse

ccw = top4(west,clubs)<2
cdw = top4(west,diamonds)<2
chw = top4(west,hearts)<2
csw = top4(west,spades)<2
noConWest = ccw and cdw and chw and csw

unbalEast = shape(east,xxxx -any 8xxx -any 7xxx -any 6xxx -any 55xx)
unbalWest = shape(west,xxxx -any 8xxx -any 7xxx -any 6xxx -any 55xx)

balEast   = shape(east,any 4333 +any 4432)
balWest   = shape(west,any 4333 +any 4432)

calmEast = ((unbalEast and hcp(east)<8) or (balEast and hcp(east)<12)) and noConEast
calmWest = ((unbalWest and hcp(west)<8) or (balWest and hcp(west)<12)) and noConWest
calmOpps = calmEast and calmWest
##### End of Define Calm Opponents #####

##### Predict South's opening bid #####
#Import,https://github.com/ADavidBailey/Practice-Bidding-Scenarios/blob/main/-Script-Predict-Opening-1-Bid
## Imported Script -- Predict Opening Bid ##

# Calculate length points for South (lengthPoints)
lp1 = spades(south)>4 ? spades(south)-4 : 0
lp2 = hearts(south)>4 ? hearts(south)-4 : 0
lp3 = diamonds(south)>4 ? diamonds(south)-4 : 0
lp4 = clubs(south)>4 ? clubs(south)-4 : 0
lengthPoints = lp1 + lp2 + lp3 + lp4

# Calculate doubleton honor NT downgrade(s) for South -- 2 cards, 1 honor, not the Ace
S2H = spades(south)==2 and top4(south,spades)==1 and not hascard(south,AS) ? 1 : 0
H2H = hearts(south)==2 and top4(south,hearts)==1 and not hascard(south,AH) ? 1 : 0
D2H = diamonds(south)==2 and top4(south,diamonds)==1 and not hascard(south,AD) ? 1 : 0
C2H = clubs(south)==2 and top4(south,clubs)==1 and not hascard(south,AC) ? 1 : 0
ntDownGrade = S2H + H2H + D2H + C2H

# Define notrump points for south (ntPoints)
ntPoints = hcp(south) + lengthPoints - ntDownGrade

# Define suit points for south (suitPoints)
suitPoints = hcp(south) + lengthPoints

# Define robot notrump shape and exclude any 5card 
ntShape = shape(south, any 4333 +any 4432 +any 5332 +any 5422 -5xxx -x5xx)

# Define ntPoint ranges
oneNT   = ntShape and ntPoints>14 and ntPoints<18
twoNT   = ntShape and ntPoints>19 and ntPoints<22
threeNT = ntShape and ntPoints>25 and ntPoints<28
weakNT  = ntShape and ntPoints>10 and ntPoints<15

# Define Game Forcing 2C
case1 = hcp(south)>22
case2 = hcp(south)>18 and losers(south)<5 and (spades(south)>5 or hearts(south)>5)
case3 = hcp(south)>18 and losers(south)<4 and (diamonds(south)>5 or clubs(south)>5)
gameForce2C = (case1 or case2 or case3) and not threeNT

### Predict South's opening BID
P1 = gameForce2C
P2 = P1 or threeNT or twoNT or oneNT // or weakNT  weakNT will be duplicated diamond and club openings

# Predict South's Opening suit
s = spades(south)
h = hearts(south)
d = diamonds(south)
c = clubs(south)
s1Range = suitPoints>11 and hcp(south)>9
oS = s>4 and s>=h and s>=d and s>=c and s1Range and not P2
oH = not oS and h>4 and h>=d and h>=c and s1Range and not P2
oD = not (oS or oH) and ((d>3 and d>=c) or c<3) and s1Range and not P2
oC = not (oS or oH or oD) and s1Range and not P2
openingSuit = (oS or oH or oD or oC)
oneSpade = oS
oneHeart = oH
oneDiamond = oD                                                              // duplicates weakNT
oneClub = oC                                                                 // duplicates weakNT

##### End of Predict-Opening-Bid #####


###### Define Bidding Sequences #####
# These variables are defined in the imported script
# The number of cards South has in each suit: s, h, d, c
# South's predicted opening suit: oC, oD, oH, oS 

sP = hcp(south)
nP = hcp(north)

# Predict North's 1-level response
sN = spades(north)
hN = hearts(north)
dN = diamonds(north)
cN = clubs(north)

# North responds in D, H, or S (Walsh style), or raises C.  longer than C to avoid 2/1

# Predict North's responding suit
nRS  =  nP<11 ? sN>3 and sN>hN : sN>3 and sN>hN and sN>=dN and sN>=cN               // avoid 2/1 in minor
nRH  = (nP<11 ? hN>3           : hN>3           and hN>=dN and hN>=cN) and not (nRS)
nRD = dN>3           and dN>=cN and not (nRS or nRH)
nRC = cN>4           and cN>4   and not (nRS or nRH or nRD)
nRN = not (nRS or nRH or nRD or nRC)

# Define South's possible rebids
sRC = clubs(south)>3
sRD = diamonds(south)>3
sRH = hearts(south)>3
sRS = spades(south)>3
sRN = shape(south,any 4333+any 4432+any 5332)

# Defining South's opening (not NT) & North's non-GF response
CD = oC and nRD
CH = oC and nRH
CS = oC and nRS
CN = oC and nRN
CC = oC and nRC

DH = oD and nRH
DS = oD and nRS
DN = oD and nRN
DD = oD and not (DH or DS or DN)

HS = sP<11 ? oH and nRS and hN<3 : oH and nRS and hN<4     // no Jacoby 2N
HN = oH and nRN
HH = oH and not (HS or HN)
##### End of Define Bidding Sequences #####

# Don't include a singleton K, Q, or J
Cshort = (shape(south,xxx1) and (top4(south,clubs)   ==0 or hascard(south,AC)) or shape(south,xxx0))
Dshort = (shape(south,xx1x) and (top4(south,diamonds)==0 or hascard(south,AD)) or shape(south,xx0x))
Hshort = (shape(south,x1xx) and (top4(south,hearts)  ==0 or hascard(south,AH)) or shape(south,x0xx))
Sshort = (shape(south,1xxx) and (top4(south,spades)  ==0 or hascard(south,AS)) or shape(south,0xxx))

# Responder does NOT have direct support for Opener's suit
##   I may need to add this   ##

# Define splinter sequences
CD3H = CD and d>4 and Hshort
CD3S = CD and d>4 and Sshort
CH3D = CH and h>3 and Dshort  // invite
CH3S = CH and h>3 and Sshort
CS3D = CS and s>3 and Dshort  // invite
CS3H = CS and s>3 and Hshort  // invite
DH4C = DH and h>3 and Cshort
DH3S = DH and h>3 and Sshort
DS4C = DS and s>3 and Cshort
DS3H = DS and s>3 and Hshort  // invite
HS4C = HS and s>3 and Cshort
HS4D = HS and s>3 and Dshort
jReverse   = (CH3D or CS3D or CS3H or DS3H) and hcp(south)>12 and hcp(south)<22
jJumpShift = (CD3H or CD3S or CH3S or DH4C or DH3S or DS4C or HS4C or HS4D) and hcp(south)>15 and hcp(south)<19

# North does not have direct support for south
northOK = 1

sOpens = jReverse or jJumpShift

northRange = hcp(north)>5  and hcp(north)<17  // no jump shifts

# Now do it
sOpens and northRange and calmOpps

action
average "CD " 100 * CD,
average "  3H     " 100 * CD3H,
average "  3S     " 100 * CD3S,
average "CH " 100 * CH,
average "  3Di    " 100 * CH3D,
average "  3S     " 100 * CH3S,
average "CS " 100 * CS,
average "  3Di    " 100 * CS3D,
average "  3Hi    " 100 * CS3H,
average "DH " 100 * DH,
average "  4C     " 100 * DH4C,
average "  3S     " 100 * DH3S,
average "DS " 100 * DS,
average "  3Hi    " 100 * DS3H,
average "  4C     " 100 * DS4C,
average "HS " 100 * HS,
average "  4C     " 100 * HS4C,
average "  4D     " 100 * HS4D,

average "GI " 100 * jReverse,
average "GF " 100 * jJumpShift,


printpbn
