# Dealer FourthSuitForcing
generate 9999999
produce 499
dealer south



##### Imported Script: Define Calm Opponents #####

# Avoid concentration of values
cce = top4(east,clubs)<2
cde = top4(east,diamonds)<2
che = top4(east,hearts)<2
cse = top4(east,spades)<2
noConEast = cce and cde and che and cse

ccw = top4(west,clubs)<2
cdw = top4(west,diamonds)<2
chw = top4(west,hearts)<2
csw = top4(west,spades)<2
noConWest = ccw and cdw and chw and csw

unbalEast = shape(east,xxxx -any 8xxx -any 7xxx -any 6xxx -any 55xx)
unbalWest = shape(west,xxxx -any 8xxx -any 7xxx -any 6xxx -any 55xx)

balEast   = shape(east,any 4333 +any 4432)
balWest   = shape(west,any 4333 +any 4432)

calmEast = (unbalEast and noConEast and hcp(east)<8) or (balEast and hcp(east)<12)
calmWest = (unbalWest and noConWest and hcp(west)<8) or (balWest and hcp(west)<12)
calmOpps = calmEast and calmWest

##### End of Imported Script: Define Calm Opponents #####

##### Imported Script -- Predict Opening 1-Bid #####

# Calculate length points for South (lengthPoints)
lp1 = spades(south)>4 ? spades(south)-4 : 0
lp2 = hearts(south)>4 ? hearts(south)-4 : 0
lp3 = diamonds(south)>4 ? diamonds(south)-4 : 0
lp4 = clubs(south)>4 ? clubs(south)-4 : 0
lengthPoints = lp1 + lp2 + lp3 + lp4

# Calculate doubleton honor NT downgrade(s) for South -- 2 cards, 1 honor, not the Ace
S2H = spades(south)==2 and   top4(south,spades)>0   and not hascard(south,AS) ? 1 : 0
H2H = hearts(south)==2 and   top4(south,hearts)>0   and not hascard(south,AH) ? 1 : 0
D2H = diamonds(south)==2 and top4(south,diamonds)>0 and not hascard(south,AD) ? 1 : 0
C2H = clubs(south)==2 and    top4(south,clubs)>0    and not hascard(south,AC) ? 1 : 0
dgPoints = S2H + H2H + D2H + C2H

# Define notrump points for south (ntPoints)
ntPoints = lengthPoints>dgPoints ? hcp(south) + lengthPoints - dgPoints : hcp(south)

# Define suit points for south (suitPoints)
suitPoints = hcp(south) + lengthPoints

# Define robot notrump shape and exclude any 5card 
ntShape = shape(south, any 4333 +any 4432 +any 5332 +any 5422 -5xxx -x5xx)

# Define ntPoint ranges
oneNT   = ntShape and ntPoints>14 and ntPoints<18
twoNT   = ntShape and ntPoints>19 and ntPoints<22
threeNT = ntShape and ntPoints>25 and ntPoints<28
weakNT  = ntShape and ntPoints>10 and ntPoints<15

# Define Game Forcing 2C
case1 = hcp(south)>22
case2 = hcp(south)>18 and losers(south)<5 and (spades(south)>5 or hearts(south)>5)
case3 = hcp(south)>18 and losers(south)<4 and (diamonds(south)>5 or clubs(south)>5)
gameForce2C = (case1 or case2 or case3) and not threeNT

### Predict South's opening BID
P1 = gameForce2C
P2 = P1 or threeNT or twoNT or oneNT // or weakNT  weakNT will be duplicated diamond and club openings

# Predict South's Opening suit
s = spades(south)
h = hearts(south)
d = diamonds(south)
c = clubs(south)
s1Range = suitPoints>11 and hcp(south)>9
oS = s>4 and s>=h and s>=d and s>=c and s1Range and not P2
oH = not oS and h>4 and h>=d and h>=c and s1Range and not P2
oD = not (oS or oH) and ((d>3 and d>=c) or c<3) and s1Range and not P2
oC = not (oS or oH or oD) and s1Range and not P2
openingSuit = (oS or oH or oD or oC)
oneSpade = oS
oneHeart = oH
oneDiamond = oD
oneClub = oC

##### End of Imported Script -- Predict Opening 1-Bid #####


###### Define Bidding Sequences #####
# These variables are defined in the imported script
# The number of cards South has in each suit: s, h, d, c
# South's predicted opening suit: oC, oD, oH, oS 

sP = hcp(south)
nP = hcp(north)

# Predict North's 1-level response
sN = spades(north)
hN = hearts(north)
dN = diamonds(north)
cN = clubs(north)

# North responds in D, H, or S (Walsh style), or raises C.  longer than C to avoid 2/1

# Predict North's responding suit
nS  =  nP<11 ? sN>3 and sN>hN : sN>3 and sN>hN and sN>=dN and sN>=cN               // avoid 2/1 in minor
nH  = (nP<11 ? hN>3           : hN>3           and hN>=dN and hN>=cN) and not (nS)
nD  = dN>3           and dN>=cN and not (nS or nH)
nC  = cN>4           and cN>4   and not (nS or nH or nD)
nN  = not (nS or nH or nD or nC)

# Define South's possible rebids
sRC = clubs(south)>3
sRD = diamonds(south)>3
sRH = hearts(south)>3
sRS = spades(south)>3
sRN = shape(south,any 4333+any 4432+any 5332)

# Defining South's opening (not NT) & North's non-GF response
CD = oC and nD
CH = oC and nH
CS = oC and nS
CN = oC and nN
CC = oC and nC

DH = oD and nH
DS = oD and nS
DN = oD and nN
DD = oD and not (DH or DS or DN)

HS = sP<11 ? oH and nS and hN<3 : oH and nS and hN<4     // no Jacoby 2N
HN = oH and nN
HH = oH and not (HS or HN)

CDH = CD and sRH
CDS = CD and sRS and not (CDH)
CDN = CD and sRN and not (CDH or CDS)
CDC = CD and c>5 and not (CDH or CDS or CDN)
CDD = CD and d>3 and not (CDH or CDS or CDN or CDC)

CHS = CH and sRS
CHN = CH and sRN and not (CHS)
CHC = CH and c>5 and not (CHS or CHN)
CHD = CH and sRD and not (CHS or CHN or CHC)
CHH = CH and sRH and not (CHS or CHN or CHC or CHD)

CSN = CS and sRN
CSC = CS and c>5 and not (CSN)
CSD = CS and sRD and not (CSN or CSC)
CSH = CS and sRH and not (CSN or CSC or CSD)
CSS = CS and sRS and not (CSN or CSC or CSD or CSH)

CNC = CN and c>5
CND = CN and sRD and not (CNC)
CNH = CN and sRH and not (CNC or CND)
CNS = CN and sRS and not (CNC or CND or CNH)
CNN = CN and sRN and not (CNC or CND or CNH or CNS)

CCD = CC and sRD
CCH = CC and sRH and not (CCD)
CCS = CC and sRS and not (CCD or CCH)
CCN = CC and sRN and not (CCD or CCH or CCS)
CCC = CC and c>5 and not (CCD or CCH or CCS or CCN)

DHS = DH and sRS
DHN = DH and sRN and not (DHS)
DHC = DH and sRC and not (DHS or DHN)
DHD = DH and d>5 and not (DHS or DHC or DHN)
DHH = DH and sRH and not (DHS or DHC or DHN or DHD)

DSN = DS and sRN
DSC = DS and sRC and not (DSN)
DSD = DS and d>5 and not (DSN or DSC)
DSH = DS and sRH and not (DSN or DSC or DSD)
DSS = DS and sRS and not (DSN or DSC or DSD or DSH)

DNC = DN and sRC
DND = DN and d>5 and not (DNC)
DNH = DN and sRH and not (DNC or DND)
DNS = DN and sRS and not (DNC or DND or DNH)
DNN = DN and sRN and not (DNC or DND or DNH or DNS)

HSN = HS and sRN
HSC = HS and sRC and not (HSN)
HSD = HS and sRD and not (HSN or HSC)
HSH = HS and h>5 and not (HSN or HSC or HSD)
HSS = HS and sRS and not (HSN or HSC or HSD or HSH)

HNC = HN and sRC
HND = HN and sRD and not (HNC)
HNH = HN and h>5 and not (HNC or HND)
HNS = HN and sRS and not (HNC or HND or HNH)
HNN = HN and sRN and not (HNC or HND or HNH or HNS)

##### End of Define Bidding Sequences #####

##### Select appropriate 4SF bidding sequences #####
noReverse = (CDH or CDS or CHS or DHS or DHC or DSC or HSC or HSD) and sP>11 and sP<17 // Avoid Jump Shifts
isReverse = (CHD or CSD or CSH or DSH) and sP>16
allSequences = noReverse or isReverse and not CDH     // CDH is ommited.  Many consider it natural and F1

# North's constraints
nShape = shape(north,any 7xxx+any 6xxx+any 5xxx-any 74xx-any 64xx-any 5332-any 4432-any 4333) 
nRange = nP>12 and nP<16   // with 13-15 I got Soloway jumpshifts
nConstraints = nShape and nRange

# South's constraints
sSpades   = (CS or DS or HS) and spades(south)<=3
sHearts   = (CH or DH)       and hearts(south)<=3
sDiamonds = CD               and diamonds(south)<4

sSupport  = sSpades or sHearts or sDiamonds
twoSuits  = shape(south,any 54xx+any 44xx)
sConstraints = sSupport and twoSuits and sP<19

# Now do it
allSequences and sConstraints and nConstraints and calmOpps
#and CHD

# Just for stats...
bal = shape(south,any 5422+any 5332+any 4432)
h3  = h==3 and (CH or DH)
s3  = s==3 and (CS or DS or HS)


action
printoneline,
average "noReverse " 100 * noReverse,
average "CDH       " 100 * CDH,
average "CDS       " 100 * CDS,
average "CHS       " 100 * CHS,
average "DHS       " 100 * DHS,
average "DHC       " 100 * DHC,
average "DSC       " 100 * DSC,
average "HSC       " 100 * HSC,
average "HSD       " 100 * HSD,
average "isReverse " 100 * isReverse,
average "CHD       " 100 * CHD,
average "CSD       " 100 * CSD,
average "CSH       " 100 * CSH,
average "DSH       " 100 * DSH,
average "balanced  " 100 * bal,
average " Heart sup" 100 * (bal and h3),
average " Spade sup" 100 * (bal and s3),
average "unbalanced" 100 * not bal,
average " Heart sup" 100 * (not bal and h3),
average " Spade sup" 100 * (not bal and s3),


printpbn
