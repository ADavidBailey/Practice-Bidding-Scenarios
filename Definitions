# Definitions
 
# Calculate Total Points for south (tp)
v1 = shape(south, any 0xxx) ? 5 : 0  // allow for 2 voids
v2 = shape(south, any 00xx) ? 5 : 0
s1 = shape(south, any 1xxx) ? 3 : 0 // allow for 2 singletons
s2 = shape(south, any 11xx) ? 3 : 0
d1 = shape(south, any 2xxx) ? 1 : 0 // allow for 3 doubletons
d2 = shape(south, any 22xx) ? 1 : 0
d3 = shape(south, any 222x) ? 1 : 0
tp = v1+v2+s1+s2+d1+d2+d3 + hcp(south)

# Calculate length points for South (lp)
lp1 = spades(south)>4 ? spades(south)-4 : 0
lp2 = hearts(south)>4 ? hearts(south)-4 : 0
lp3 = diamonds(south)>4 ? diamonds(south)-4 : 0
lp4 - clubs(south)>4 ? clubs(south)-4 : 0
lp = lp1 + lp2 + lp3 + lp4 + hcp(south)

# Negative shape that works...
shape(south, xxxx -any 5332 -any 4432 -any 4333)

# Define pesky opps e/w distributions and HCP.  We donâ€™t want them mucking up our auctions
calmEast = shape(east,any 5431 +any 5422 +any 5332 +any 4441 +any 4432 +any 4333)
calmWest = shape(west,any 5431 +any 5422 +any 5332 +any 4441 +any 4432 +any 4333)
calmOpps= calmEast and calmWest


NT = shape(south, any 4333 +any 4432 +any 5332 +any 5422 -5xxx -x5xx)
WeakNT = NT and hcp(south)>10 and hcp(south)<15
OneNT = NT and hcp(south)>14 and hcp(south)<18
NTovercall = NT and hcp(south)>14 and hcp(south)<19
TwoNT = NT and hcp(south)>19 and hcp(south)<22

GF = hcp(south)>21

OneMajor = (S_ or H_) and not (NT or GF)
OneMinor = (C_ or D_) and not (NT or GF)

# Predict South's Opening Suit
s = spades(south)
h = hearts(south)
d = diamonds(south)
c = clubs(south)
oS = s>4 and s>=h and s>=d and s>=c
oH = not oS and h>4 and h>=d and h>=c
oD = not (oS or oH) and ((d>3 and d>=c) or c<3)
oC = not (oS or oH or oD)

# Calculate long suit Points for South
lpS = oS ? s : 0
lpH = oH ? h : 0
lpD = oD ? d : 0
lpC - oC ? c : 0
sLP = lpS + lpH + lpD + lpC - 4


# Predict North's opening suit
sN = spades(north)
hN = hearts(north)
dN = diamonds(north)
cN = clubs(north)
nS = sN>4 and sN>=hN and sN>=dN and sN>=cN
nH = not nS and hN>4 and hN>=dN and hN>=cN
nD = not nS and not nH and ((dN>3 and dN>=cN) or cN<3)
nC = not nS and not nH and not nD

# Calculate North's Rank
nRS = nS ? 4 : 0
nRH = nH ? 3 : 0
nRD = nD ? 2 : 0
nRC = nC ? 1 : 0
northRank = nRS+nRH+nRD+nRC   // all except one are zero

# East's longest suit
sE = spades(east)
hE = hearts(east)
dE = diamonds(east)
cE = clubs(east)
eS = sE>=hE and sE>=dE and sE>=cE
eH = not eS and hE>=dE and hE>=cE
eD = not eS and not eH and dE>=cE
eC = not eS and not eH and not eD

# Calculate East's Rank
eRS = eS ? 4 : 0
eRH = eH ? 3 : 0
eRD = eD ? 2 : 0
eRC = eC ? 1 : 0
eastRank = eRS+eRH+eRD+eRC

# South's longest suit
s = spades(south)
h = hearts(south)
d = diamonds(south)
c = clubs(south)
sS = s>=h and s>=d and s>=c
sH = not sS and h>=d and h>=c
sD = not sS and not sH and d>=c
sC = not sS and not sH and not sD

# Calculate South's Rank
sRS = sS ? 4 : 0
sRH = sH ? 3 : 0
sRD = sD ? 2 : 0
sRC = sC ? 1 : 0
southRank = sRS + sRH + sRD + sRC

# Requirement for a Free Bid, Negative or Otherwise
(northRank > eastRank) or (eastRank > southRank)

# Define East weak 2 bids
w2S = spades(east)==6 and top5(east,spades)>2 and hcp(east,spades)>4 and hearts(east)<4 and spades(south)<3 and spades(west)<3
w2H = hearts(east)==6 and top5(east,hearts)>2 and hcp(east,hearts)>4 and spades(east)<4 and hearts(south)<3 and hearts(west)<3
w2D = diamonds(east)==6 and top5(east,diamonds)>2 and hcp(east,diamonds)>4 and spades(east)<4 and hearts(east)<4 and diamonds(south)<3
eOpensWeak2 = (w2S or w2H or w2D) and hcp(east)>5 and hcp(east)<10 and shape(east,any 6430 +any 6421 +any 6331 +any 6322)

